apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'de.mobilej.unmock'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    defaultConfig {
        applicationId "com.example.opulexpropertymanagement"
        // for letter spacing
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Room export location
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        dataBinding = true
    }
    androidExtensions {
        experimental = true
    }
    // testing
    testOptions {
//        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}
repositories {
    // Atrium
    mavenCentral()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}
kapt {
    correctErrorTypes true
}
unMock {
    keep "android.net.Uri"
    keepStartingWith "android.content.SharedPreferences"
}
dependencies {
    //
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.firebase:firebase-database:16.0.4'
    implementation 'com.google.firebase:firebase-storage:16.0.4'
    implementation 'com.google.firebase:firebase-auth:16.0.5'
    // Firebase + Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.1.1'
    // TMCommonKotlin
    implementation 'tminus1010.tmcommonkotlin:tmcommonkotlin:1.0.11'
    // Navigation
    def nav_version = "2.3.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Activity+Fragment (supports Lifecycle)
    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    // Lifecycle: ViewModel (more lifecycle objects besides ViewModel are available if you need them.)
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData + ReactiveX
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    // Room
    def room_version = "2.3.0-alpha01"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    // ->Retrofit-Gson adapter
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:2.2.10"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    // ->Retrofit-RX adapter
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    // ->Retrofit + Coroutines
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    // ->Retrofit string handling
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    // ->Retrofit + Coroutines
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'
    // Event-Emitter (not used)
    implementation 'com.github.Zhuinden:event-emitter:1.1.0'
    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
    // CopyPaste for Dagger
    implementation "com.squareup.retrofit2:retrofit:2.5.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.5.0"
    implementation "com.squareup.okhttp3:okhttp:3.14.4"
    implementation "com.squareup.okhttp3:logging-interceptor:3.14.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"
    // Dagger
    implementation 'com.google.dagger:dagger:2.25.4'
    kapt 'com.google.dagger:dagger-compiler:2.25.4'
    //###Testing
    //#Suite
    //    JUnit 4
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    //    Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //#Assertion
    //#Mocking
    //    Mockito
    testImplementation 'org.mockito:mockito-inline:2.23.4'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0'
    //#Environment
    //    LiveData Dispatcher
    testImplementation 'android.arch.core:core-testing:1.1.1'
    //    Coroutines Dispatcher
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2"
}
